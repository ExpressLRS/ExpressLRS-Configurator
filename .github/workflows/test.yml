name: Test

on: [ push, pull_request, workflow_dispatch ]

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ 'ubuntu-18.04', 'windows-2019', 'macos-latest' ]

    steps:
      - name: Setup apt dependencies
        if: matrix.os == 'ubuntu-18.04'
        run: |
          sudo apt update
          sudo apt-get install --no-install-recommends -y libarchive-tools rpm

      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.17.0

      - name: Install Yarn
        run: |
          corepack enable
          corepack prepare yarn@3.2.3 --activate

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Restore yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
          restore-keys: |
            yarn-cache-folder-

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile --network-timeout 180000

      - name: yarn lint
        run: |
          yarn lint

      - name: yarn package
        run: |
          yarn package

      - name: yarn test
        run: |
          yarn test

