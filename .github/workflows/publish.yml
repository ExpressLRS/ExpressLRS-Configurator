name: Publish

on: workflow_dispatch

jobs:
  publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-18.04', 'windows-2019', 'macos-latest' ]
    steps:
      - name: Setup apt dependencies
        if: matrix.os == 'ubuntu-18.04'
        run: |
          sudo apt update
          sudo apt-get install --no-install-recommends -y libarchive-tools rpm

      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.17.0

      - name: Install Yarn
        run: |
          sudo corepack enable
          corepack prepare yarn@stable --activate

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Restore yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
          restore-keys: |
            yarn-cache-folder-

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile --network-timeout 180000

      - name: Publish Windows releases
        if: matrix.os == 'windows-2019'
        shell: powershell
        env:
          # These values are used for auto updates signing
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          # CSC_LINK: ${{ secrets.CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn build
          yarn electron-builder --publish always --x64 --win

      - name: Publish macOS releases
        if: matrix.os == 'macos-latest'
        env:
          # These values are used for auto updates signing
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          # CSC_LINK: ${{ secrets.CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn build
          yarn electron-builder --publish always --x64 --mac

      - name: Publish Linux releases
        if: matrix.os == 'ubuntu-18.04'
        env:
          # These values are used for auto updates signing
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          # CSC_LINK: ${{ secrets.CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn build
          yarn electron-builder --publish always --x64 --linux
