{
  "BuildNotificationsList": {
    "VerifyingBuildSystem": "ビルドシステムの検証",
    "DownloadingFirmware": "ファームウェアをダウンロード中",
    "BuildingUserDefinesTXT": "user_defines.txtの構築",
    "CompilingFirmware": "ファームウェアをコンパイル中",
    "FlashingDevice": "書き込み中"
  },
  "BuildResponse": {
    "Error": "エラー",
    "GitDependencyError": "Git の依存関係エラー",
    "PythonDependencyError": "Python の依存関係エラー",
    "PlatformioDependencyError": "PlatformIO の依存関係エラー",
    "BuildError": "ビルドエラー",
    "FlashError": "フラッシュエラー",
    "TargetMismatch": "フラッシュしようとしているターゲットは現在のデバイスのターゲットと一致しません。本当に実行する場合は、下の強制フラッシュをクリックしてください。",
    "Success": "成功！",
    "ErrorDetails": "エラーが発生しました。正確なエラーメッセージは上記のログを参照してください。まだの場合は、<ExpresslrsLink>Expresslrs.org</ExpresslrsLink>にアクセスし、<FlashingGuideLink>フラッシュ・ガイド</FlashingGuideLink>と<TroubleshootingGuideLink>トラブルシューティング・ガイド</TroubleshootingGuideLink>をお読みください。ドキュメントを確認しても問題が解決しない場合は、上記のビルド・ログをオンライン・ペースト・サイトにコピーし、<ExpressLRSDiscordLink>ExpressLRS Discord</ExpressLRSDiscordLink> の#help-and-support チャンネルに、ログへのリンクと、お使いのデバイス、使用したフラッシング方法、問題を解決するためにすでに行った手順などの関連情報を添えて投稿してください。"
  },
  "DeviceOptionsForm": {
    "StandardMode": "標準モード",
    "ManualMode": "マニュアルモード",
    "CopyFromStandardMode": "標準モードからコピーする",
    "LongerBuildTimeWarning": "ユーザー定義モードを使用する場合、クラウド上のバイナリキャッシュは使用しませんので、ビルド時間が大幅に長くなります。",
    "RegulatoryDomains": "規制ドメイン",
    "BindingPhraseSetup": "バインディングフレーズの設定",
    "CompatibilityOptions": "互換性オプション",
    "PerformanceOptions": "パフォーマンス設定",
    "ExtraData": "追加データ",
    "Network": "ネットワーク",
    "OtherOptions": "その他の設定"
  },
  "DeviceTargetForm": {
    "UnverifiedHardwareTitle": "検証されていないハードウェア",
    "UnverifiedHardwareContent": "このハードウェアの製造元は、評価と検証のために開発者にサンプルを提供していません。 サポートに連絡するか自分の責任で進めてください。すべての機能が動作するとは限りません。",
    "DeviceCategory": "デバイスのカテゴリ",
    "Device": "デバイス"
  },
  "FirmwareVersionForm": {
    "OfficialReleases": "公式リリース",
    "GitBranch": "Gitブランチ",
    "GitCommit": "Git コミット",
    "Local": "ローカル",
    "GitPullRequest": "Git プルリクエスト",
    "ShowPreRreleases": "プレリリースを表示",
    "Releases": "リリース",
    "ReleaseNotes": "リリースノート",
    "NewerVersionAvailable": "新しいバージョンのファームウェアが利用可能です",
    "UpgradeToV3": "ExpressLRS 2.X はサポートされなくなりました。ExpressLRS 3.X にアップグレードしてください。",
    "DangerZoneTitle": "危険ゾーン",
    "DangerZoneContent": "これらの情報源は、あなたが何をしているか、プロジェクト開発者から指示された場合にのみ使用してください。",
    "GitBranches": "Gitブランチ",
    "GitCommitHash": "Git コミットハッシュ",
    "LocalPath": "ローカル パス",
    "AttentionTitle": "注意",
    "AttentionContent": "古いBetaFPVカスタムExpressLRSフォークをフラッシュしようとしています。BetaFPVハードウェアは最近の公式ExpressLRSリリースで完全にサポートされています。 最高のExpressLRS体験を得るために公式ファームウェアを使用することをお勧めします。",
    "ChooseFolder": "フォルダの選択",
    "GitPullRequests": "Git プルリクエスト"
  },
  "FlashingMethodDescription": {
    "BetaflightPassthroughDescription": "この方法では、フライトコントローラのパススルー機能を使用して、フライトコントローラに接続されている受信機をフラッシュすることができます。",
    "PlugInFCToComputer": "FCをコンピュータに接続します。ただし、Betaflight Configurator から接続しないでください。",
    "SelectDesiredDevice": "必要なデバイスオプションとフライトコントローラのシリアルデバイスを以下から選択します。",
    "RunBuild&Flash": "ビルドとフラッシュを実行する",
    "BetaflightPassthroughWiki": "最新の定義については、Wikiページをご覧ください。",
    "DFU": "この方法により、デバイスファームウェアアップグレードモードを介して受信機または送信機をフラッシュすることができます。",
    "GeneralWiki": "詳しくは各デバイスのWikiページをご覧ください。",
    "STLink": "この方法により、デバイスに接続されたSTLinkプログラマを使用して受信機または送信機をフラッシュすることができます。",
    "StockBL": "この方法により、デバイス上のブートローダを使用して、レシーバーまたはトランスミッターをフラッシュすることができます。",
    "UART": "この方法により、USBポートやFTDIデバイスと配線して、受信機または送信機をフラッシュすることができます。",
    "WIFI": "この方法でファームウェアファイルを作成し、内蔵のWi-Fiに接続して受信機や送信機にアップロードすることができます。",
    "EdgeTxPassthrough": "この方法では、EdgeｰTXのパススルー機能を使用して、送信機モジュールをフラッシュすることができます。",
    "Passthrough": "この方法では、パススルー機能を使用することで、モジュールをトランスミッターに接続したままフラッシュすることができます。"
  },
  "FlashingMethodOptions": {
    "FlashingMethod": "フラッシュ方法"
  },
  "Header": {
    "ExpressLRSConfigurator": "ExpressLRSコンフィギュレータ",
    "DownloadNewestRelease": "クリックして最新のリリースをダウンロードする",
    "UpdateAvailable": "利用可能なアップデートがあります",
    "Documentation": "ドキュメント",
    "Discord": "Discord",
    "FacebookGroup": "Facebookグループページ",
    "Github": "GitHub",
    "OpenCollective": "オープングループ"
  },
  "SerialConnectionForm": {
    "SerialDevice": "シリアルデバイス",
    "BaudRate": "ボー・レート",
    "Connect": "接続"
  },
  "SerialDeviceSelect": {
    "ManualSelectionTitle": "シリアルデバイスを選択する",
    "ManualSelectionTitleTooltip": "自動選択が正しいポートを選択できない場合は、手動でシリアルポートを選択します。 ほとんどの場合このオプションを使用する必要はありません。"
  },
  "Sidebar": {
    "Configurator": "コンフィギュレーター",
    "Backpack": "バックパック",
    "Logs": "ログ",
    "SerialMonitor": "シリアルモニター",
    "Settings": "設定",
    "Support": "サポート"
  },
  "UserDefineDescription": {
    "RegulatoryDomain915": "使用する場所の規制ドメインについては、 <LoRaWANLink>LoRaWAN周波数プランおよび規制</LoRaWANLink> を参照してください。",
    "Wiki": "最新の定義については、Wikiページをご覧ください。",
    "RegulatoryDomainISM2400": "ISMラジオバンドは、国際的に予約された無線周波数の一部です。この規制ドメインは、どの国でも安全に使用できます。",
    "RegulatoryDomainEUCE2400": "ファームウェア V3.x より前のバージョンでは、EU CE 2.4 GHz 規制ドメインは最大電力を 10mW に制限しており、LBTは必要ありません。V3.x より後のバージョンでは、EU CE 2.4 GHz 規制ドメインは最大電力を 100mW に制限し、LBTを有効にします。",
    "BindingPhrase": "バインディングフレーズは、手動でバインドしなくても、レシーバーとトランスミッターが自動でバインドします。バインディングフレーズなしでフラッシュされたレシーバーは、従来のバインド方法を必要とします。接続するには、TXとRXの両方に同じバインディングフレーズが必要です。何か覚えやすい半角英数字のフレーズを設定します。これはパスワードではなくセキュリティを提供するものでもありません。",
    "AutoWifiOnInterval": "<p>これは、ESP8285を搭載したデバイスで、起動してから設定した秒数が経過してもバインドされない場合に、自動的にWi-Fiをオンにします。オンになったらRXのWi-Fiに接続し、http://10.0.0.1/にアクセスすることで、RXにファームウェアをアップデート出来るようになります。</p><p>自動ONまでの時間は<strong>秒</strong>で設定します。デフォルトは60秒です。</p>",
    "TLMReportIntervalMs": "<p>TXモジュールが一定間隔で送信機にテレメトリデータを送信するようにします。これにより、高いテレメトリ比率や50hzのような低レートで動作しているときの「テレメトリ・ロスト」警告を減らすことができます。</p>\n<p>デフォルトは<strong>240LU</strong>です。これを変更する場合は、ミリ秒の値の最後に<strong>LU</strong>を付けます。 例えば、100msのテレメトリ更新レートを指定するには、次のように入力する必要があります<strong>100LU</strong>。</p>\n<p>通常、EdgeTX/OpenTXベースの無線機では<strong>240LU</strong>、ErskyTxベースの無線機では<strong>100LU</strong>になります。</p>",
    "LockOnFirstConnection": "RF モードロック - デフォルトのモードは、RX が利用可能な RF モードを 5 秒の休止を挟んで最高から最低モードまでサーチしてTx が送信しているモ ードを見つけます。接続が確立されると、Rxは（パワーリセットされるまで）RFモードをサーチしなくなります。",
    "JustBeepOnce": "これは、TXがスタートアップメッセージを再生するのに対して、1回だけビープ音を鳴らすかどうかを設定します。",
    "DisableStartupBeep": "これは、TXがスタートアップ時にメロディを再生しないように設定します。",
    "DisableAllBeeps": "全てのビープ音を無効にします",
    "MyStartupMelody": "<p>BlHeli32のシンタックスを使って独自のスタートアップメロディーを定義するにはこれを使います。パラメータ music string と bpm は必須で、semitone offset はオプションです。BlHeli32のメロディ例は<RoxWolfsYoutubeChannelLink>Rox Wolfs Youtube channel</RoxWolfsYoutubeChannelLink>にあります。</p><p>自分でメロディを書くには、<SheetMusic101lLink>Sheet Music 101</SheetMusic101lLink>とこの<BLHeliPianoLink>BLHeli Piano</BLHeliPianoLink>が便利です。</p><p>このオプションは RTTTL フォーマットのメロディーもサポートします。<EscTunesLink>EscTunes.com</EscTunesLink>ではたくさんの素晴らしいメロディーが多数あります。</p>",
    "UnlockHigherPower": "<p>R9Mモジュールが250mWを超えると発熱で不安定になるという報告がいくつかあります。これは、ELRSが純正ファームウェアに比べて高いデューティサイクルで送信を行うためです。\nしたがってデフォルトでは、パワーは250mwに制限されています。\n以下のオプションを有効にすることで、1000mwまでロックを解除することができます。\n冷却方法を考案する等、自己責任で行ってください。</p>\n<p><R9MFanModCoverLink>R9MファンMODカバー</R9MFanModCoverLink>を公開しました。これは3Dプリントされたカスタムバックプレートで、ファンを設置するスペースがあり、最大パワー（MODによっては1-2W）を可能にするための冷却機構を備えています。</p>",
    "UARTInverted": "FrSky QX7、TBS タンゴ2、RadioMaster TX16SなどのCRSFを出力する無線との互換性を有効にします。 ほとんどの場合これを有効にしたままにしておきます。 無線がT8SG V2の場合、またはDeviationファームウェアを使用している場合は、この設定をオフにしてください。",
    "RCVRUARTBaud": "レシーバーのUARTボー・レート。デフォルトは420000です。このオプションを400000に設定すると、レシーバーはKiss v1フライトコントローラでも動作します。",
    "RCVRInvertTX": "RXI / SBUS（RX反転）パッドしかないフライトコントローラーを使用している場合、このオプションをオンにすると、レシーバーからのCRSF出力が反転され、そのパッドを使用できるようになります。これは出力をSBUSに変換するのではなく、CRSFを反転したものなので、フライトコントローラのソフトウェアでCRSFを受信プロトコルとして選択する必要があります。ESPベースのレシーバーのみ。",
    "UseR9MMR9MiniSBUS": "<p><strong>これはSBUSプロトコルを有効にしません。</strong></p>\n<p>これは、非反転UARTオプションを持たないF4 FCに便利です。これは一方向のみなので、無線機へのテレメトリダウンリンクとパススルーフラッシングを失います。これはR9MM/R9MiniのデフォルトのS.BUSピンから出力されます。互換性のためにBetaflight内でserialrx_inverted = ONに設定する必要があるかもしれません。</p>",
    "HomeWifiSSID": "ホームWi-Fiネットワーク名（SSID）を設定すると、Wi-Fi対応ハードウェアが自動的にホームネットワークに接続できるようになります。",
    "HomeWifiPassword": "ホームWi-Fiネットワークパスワードを設定すると、Wi-Fi対応ハードウェアが自動的にホームネットワークに接続できるようになります。"
  },
  "UserDefinesAdvisor": {
    "DisableUARTInvertedWarning": "UART_INVERTEDを無効にするのは一般的ではありません。送信機がそれをサポートしていることを確認してください。"
  },
  "UserDefinesList": {
    "CustomBindingPhrase": "任意のバインディングフレーズ",
    "MyStartupMelody": "スタートアップメロディ",
    "Value": "値"
  },
  "WifiDeviceList": {
    "Name": "Name",
    "Target": "ターゲット",
    "Version": "バージョン",
    "Type": "タイプ",
    "DNS": "DNS",
    "IP": "IP",
    "Select": "選択"
  },
  "WifiDeviceNotification": {
    "NewDevice": "新規デバイス",
    "Select": "選択"
  },
  "WifiDeviceSelect": {
    "DefaultWifiIp": "デフォルト (10.0.0.1)",
    "WifiDevices": "Wi-Fiデバイス",
    "Manual": "マニュアル",
    "WifiDeviceSelection": "Wi-Fi デバイス選択",
    "IPAddress": "IPアドレス"
  },
  "Updater": {
    "FoundUpdates": "アップデートが見つかりました",
    "UpdateNow": "アップデートが見つかりました。今すぐアップデートしますか？",
    "Sure": "はい",
    "Later": "後で",
    "UpdateDownloading": "アップデートのダウンロード中",
    "NotifiedWhenReadyToInstall": "アップデートをダウンロード中です。インストールの準備ができたら通知されます。",
    "Restart": "再起動",
    "ApplicationUpdate": "アプリケーションの更新",
    "Update": "アップデート",
    "ApplyUpdates": "新しいバージョンがダウンロードされました。アップデートを適用するにはアプリケーションを再起動してください。"
  },
  "ConfiguratorView": {
    "DownloadLUAScript": "LUAスクリプトをダウンロード",
    "FirmwareVersion": "ファームウェアのバージョン",
    "Target": "ターゲット",
    "Notice": "通知",
    "SelectFirmwareVersionFirst": "最初にファームウェアのバージョンを選択してください",
    "DeviceOptions": "デバイスのオプション",
    "ResetDevice": "このデバイスのターゲットで推奨されるデフォルト設定にデバイスオプションをリセットします。バインディングフレーズは保持されます。",
    "Reset": "リセット",
    "Actions": "アクション",
    "FlashingOptions": "フラッシュオプション",
    "EraseBeforeFlash": "フラッシュの前に消去",
    "ForceFlash": "強制フラッシュ",
    "Build": "ビルド",
    "Flash": "フラッシュ",
    "NetworkDevices": "ネットワーク デバイス",
    "DeviceSelectError": "デバイス選択エラー",
    "DeviceCouldNotBeAutomaticallySelected": "ターゲットデバイスを自動的に選択できませんでした。手動で選択してください。",
    "Close": "閉じる",
    "Logs": "ログ",
    "CopyLogToClipboard": "ログをクリップボードにコピーする",
    "SaveLogToFile": "ログをファイルに保存する",
    "BuildsTakeMinutesFirstTime": "初めてビルドする時は、少なくとも数分かかることがありますが正常です。",
    "Result": "結果",
    "Warning": "警告",
    "WaitForLEDBeforeDisconnectingPower": "電源を切断する前にLEDの点滅が再開されるまでお待ちください",
    "UpdateLuaScript": "Luaスクリプトを更新",
    "UpdateLuaScriptOnRadio": "ラジオの Lua スクリプトを更新してください",
    "BuildNotice": "ビルド通知",
    "FirmwareOpenedInFileExplorer": "ファイルエクスプローラでファームウェアのバイナリファイルを開きました",
    "Back": "戻る",
    "Retry": "再試行"
  },
  "LogsView": {
    "Logs": "ログ",
    "OpenLogsFolder": "ログフォルダを開く"
  },
  "SerialMonitorView": {
    "SerialMonitor": "シリアルモニター",
    "Disconnect": "切断"
  },
  "SettingsView": {
    "Settings": "設定",
    "LanguageSelector": "言語の選択",
    "CurrentLanguage": "現在の言語"
  },
  "SupportView": {
    "Support": "サポート",
    "JoinTheCommunity": "ヘルプが必要ですか？コミュニティに参加しましょう！",
    "ExpressLRSDocumentation": "ExpressLRS ドキュメント",
    "DiscordChat": "Discordチャット",
    "FacebookGroup": "Facebook グループ",
    "Troubleshooting": "トラブルシューティング",
    "LegalDisclaimer": "免責事項",
    "UseAtYourOwnRisk": "このタイプのデバイスの使用と操作にはライセンスが必要であり、国によっては使用を禁止する場合があります。 ローカル規制の遵守を確実にするのは、エンドユーザー次第です。 これは実験的なソフトウェア/ハードウェアであり、安定性や信頼性を保証するものではありません。自己責任で使用してください。",
    "CorruptedFirmwareFiles": "破損したファームウェアファイル",
    "YouCanManuallyClearAllFiles": "git がファームウェアファイルをダウンロード中にConfiguratorを閉じると、git リポジトリの状態が破損する可能性があります。 すべてのファイルを手動で消去し、ビルドプロセスを再開できます。",
    "ClearFirmwareFiles": "ファームウェアファイルを消去",
    "CorruptedFirmwareFilesDeleted": "破損したファームウェアファイルが削除され、git リポジトリがクリーンアップされました。もう一度ビルドしてみてください。",
    "CorruptedPlatformioDependencies": "PlatformIOの壊れた依存関係",
    "YouCanManuallyClearAllDependencies": "PlatformIO が依存関係をダウンロードしている間に Configurator を閉じると、git リポジトリの状態が壊れてしまうことがあります。手動ですべての依存関係をクリアし、再度ビルドプロセスを開始することができます。",
    "ClearPlatformioDependencies": "PlatformIO の依存関係をクリア",
    "CorruptedPlatformioDependenciesDeleted": "破損したPlatformIOの依存関係を削除し、gitリポジトリをクリーンアップしました。ビルドをやり直してください。"
  }
}
